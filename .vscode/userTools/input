	[Header]
		[Name] NPC
		[Size] 0x98
		[TODO] Formatting. Still didnt settle on a good reporting format...
		[Description]
		// Overworld parameters and encapsulation of NPC objs?
		[Detected Structs] {0x24, 0x58} 0xA0, 0xD8, 0xFC ,0x178
	Offset  Type  Name               
	0x00    u8    invisCollSwitch    
			[0x0Z] <invisCollSwitch>
			// This seems to hold 4 states. All others are repeated. 00 through 04
			// covers all cases of INVISIBLE = TRUE/FALSE and COLLIDABLE = TRUE/FALSE!
	0x01    u8    ?                  
			((void (*)(void))*(0x080045BC + loc_01))();
	0x02    u8    objTypeSpriteOff                  
	0x03    u8    ?	
		*((uint32_t*)0x020010E0) &= ~(0x80000000 >> npc->unk_03);
	0x04    u8    walkingSpeed
		Setting this to 0 will freeze the game.
	0x05    u8    walkingTimer
		This is set to a value and is decreased every step. When it reaches 0,
		the object stops moving and changes direction before it's set again.
	0x07    u8    ?	
		is found to be set to 0 in 2 functions, but not much else is known.                  
	0x08    u8    contTrigger        
			[0x000Z] <convTrigger>
			// Z = 8: Trigger a certain conversation
			// Many other values just crash?
			end

	0x09    u8    walkingFlag
		0x00 - Stop
		0x04 - Default, moving
		0x08 - Stop, animation continues
	0x0A    u8    walkingFlag2
		Those might not be flags, since 0x0C behaves unpredictably by 0x04 and 0x08
		0x00 - No effect, it keeps setting to 0x04
		0x04 - Default, moving
		0x08 - Stop
		0x0C - Stop, with a weird location transformation for a moment.

	0x0C    u8   volume             
			[0xAA] <volume>
			// This specifies the width of the collision walls, in two components parallel and anti-parallel to
			// the streets in the game.
			// Interacting anywhere within the region triggers NPC interaction
	0x0D    u8    ?
		((uint8_t*)&0x0809FCB6 + 4 * loc_0D)
	0x0E    u8    walkingConfig  
		0x00 - Transformation ceases, but walking animation continues. loc_05 continues decrementing.
			   When it is reset, this changes and the NPC changes direction
		0x01 - Transform towards positive direction?
		0x05 - Transform towards negative direction?
	0x0F    u8    RO_walkingConfig
		READ-ONLY duplicate of 0x0E                  
	0x10    u8    ?                  
	0x11    u8    ?
		unk = npc->x + ((char)npc->unk_11 << 16);
		this and loc_12 are involved with x,y somehow.
	0x12    u8    ?
		unk = npc->y + ((char)npc->unk_12 << 16);
		Setting this to 0x07 makes character pass through you?
		Incremently, they get closer and closer to passing through you too!                               
	0x13    u8    ?
		Setting this to some value makes NPC pass through you.                  
	0x14    u8    animationSelect    
			[0X0Z] <facingDirection>
			// X not sure, but it is always identical or close to Z. It might be a flag.
			// Z determines direction of NPC based on 2<<n-1
	0x15    u8    RO_AnimationSel     
	0x16    u8    palleteIndx        
			[0xZZ] <palleteIndx>
			// This seems like a pallete index
	0x17    u8    interactionLocked
		bool.
		If 0, interacting with the NPC initiates chat.
		Otherwise, player freezes until it's 0.
	0x18    u8    triggerChat
			bool 
			If 1, chat activates. The NPC doesn't stop animating.
			Otherwise, nothing happens.
	0x19    u8    animationTimerActive
		bool.
		Activates a timer at npc->loc_20 that represents a timer for which the current animation state
		is active.                  
	0x1C    u8    convoSelect        
			[0x00ZZ] <convoSelect>
			// Changes conversation of copybot!!
	0x1D    u8    ?
		npc->walkingFlag = npc->unk_1D;
	0x1E    u8    ?
		npc->walkingFlag2 = npc->unk_1E;                                    
	0x1F    u8    timerActive
		[bool]
		Activates timer at loc_22   
	0x20    u16   animationTimer
	0x22	u16	  timer
		The purpose of this timer is unknown.
		Could be an extra timer for more sophisticated animations?              
	0x24    u32   x                  
			[u32] <x>
	0x28    u32   y                  
			[u32] <y>
	0x2C    u32   z                  
			[u32] <z>
	0x30    u32   nextX
		Current coordinates, these are always updated with absolute coordinates.
		They may also be used for calculational purposes and for animating. 
		Absolute coordinates are also updated by them.
		When a transformation happens, these may be used to calculate the next move, and then they are stored.
	0x34    u32   nextY
		See loc_30 doc
	0x38    u32   nextZ
		See loc_30 doc
	0x3C    u16   NPCSelect          
			[u32] <NPCSelect>
			// Changes sprite! some are neat, some are weird.
	0x3E    u16   RO_NPCSelect
	0x40    u32   deltaX
		Signed. 
		npc->nextX += npc->unk_40;
		These values are constantly updated and affect how the animation progresses in one frame.
	0x44    u32   deltaY
		Signed.
		npc->nextY += npc->unk_44;        
		See loc_40.
	0x48    u32   deltaZ
		Hypothetical. Signed.
		See loc_40
	0x4C    u32   *animationData
		Those change as animation switches!                  
	0x50    u32   hyp_IQR0                  
			[0x0000000Z]
			// For any Z, a certain conversation is triggered
			// Value constantly written to unless PET is open, for example
			// <0800385C> breaks whenever you talk to a character hmm..
	0x54    u32   hyp_IQR1
		IRQ Flags?
		0x00000001 - May trigger some conversation. The Interaction is detected. The NPC faces you.

	0x58    u32   hyp_IQR2
		IRQ Flags?                  
	0x5C    u32   hyp_IQR3
		IRQ Flags?  
		Those are very dangerous, anything you overwrite totally freezes the game.
		Then suddenly... an address pops out?!                
	0x60    u32   configFlags1           
			[u32] <flConfig>
			// Flags! 0xUUUUU_0bXcUU_UUUs_osta
			// a(0x001): !activate. 1 = interaction w/ NPC is disabled.
			// t(0x002): !turn. 1 = disabled. NPC won't turn when you interact.
			// s(0x004): !solid. 1 = Can walk through NPC.
			// o(0x008): orientation. 0 = Facing direction parallel to Lan's old house. 1 = perpendicular
			// s(0x010): also solid. No other effects observed.
			// c(0x400): conversation select of some sort. 
			// X(0x800): If c, This enters a weird state where game
			// pauses for a while until a conversation is reached...
			// Unknown. Dangerous.
			

	0x64    u32   ?
		Configuration State?
		Can make character pallete complete white, or change conversation, or change their z depth???                  
	0x68    u32   configFlags2                  
	0x6C    u32   RO_configFlags2                  
	0x70    u32   ?                  
	0x74    u32   ?                  
	0x78    u32   ?                  
	0x81    u8    ?                  
	0x82    u8    ?                  
	0x83    u8    ?                  
	0x8C    u32   ?                  
	0x94    u32   *pScript                   

